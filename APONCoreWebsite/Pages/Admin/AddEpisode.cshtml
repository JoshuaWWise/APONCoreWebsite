@page "/Admin/AddEpisode/{SeriesID}"
@model APONCoreWebsite.Pages.AddEpisodeModel
@{
    ViewData["Title"] = "AddEpisode";
}


<input type="text" id="EpisodeSaved" value=@Model.EpisodeSaved>

@{



    if (Model.UserAuthLevel < 4 && Model.EpisodeSaved == "False")
    {


        <div class="add-episode-main-box">
            <form method="post" asp-page-handler="Episode" id="mainForm" enctype="multipart/form-data">
                <div>
                    <h1>@Model.EpSeries.Name</h1>
                    <hr />
                    <input type="file"
                           id="episodeUploadInput"
                           accept=".mp3"
                           #episodeUploadInput
                           asp-for="UploadFile"
                           oninput="startFileProcess()" />
                    <input type="checkbox" id="affiliateChckbx" name="affiliateChckbx" oninput="changeAffiliate()" />
                    <label for="affiliate">Affiliate Podcast</label>
                    <div id="affilliateSection" style="visibility:hidden">
                        <label for="fileURL">Link to your podcast file. (Should point to the .mp3 file)</label>
                        <input type="text" name="affiliateFileURL" id="affiliateFileURL" />
                    </div>


                </div>

                <hr />
                <div class="add-episode-top-box">
                    <div class="full-width">

                        <div class="grid-row">
                            <div class="col-1-of-2" style="border-right: solid 1px">
                                <div class="form-group">
                                    <label for="title">Title</label>
                                    <input type="text"
                                           class="form-control w100"
                                           id="episodeTitle"
                                           required
                                           asp-for="Episode.episode.Title"
                                           name="episodeTitle" />
                                </div>

                                <div class="form-group">
                                    <label for="shortDescription">Short Description</label>

                                    <textarea class="form-control"
                                              id="shortDescription"
                                              name="shortDescription"
                                              required
                                              asp-for="Episode.episode.Description"></textarea>
                                </div>

                                <div class="form-group">
                                    <label for="webDescription">Web Description</label>
                                    <textarea id="tinyMCETextArea" name="tinyMCETextArea"
                                              asp-for="Episode.episode.WebDescription"></textarea>
                                </div>

                                <div class="form-group">
                                    <label for="myDatepicker">Show Date</label>
                                    <br />


                                    <input id="myDatePicker" name="myDatePicker" type="datetime-local" asp-for="Episode.episode.ShowDate" />
                                </div>

                                <div class="form-group">
                                    <label for="trackNumber">Track Number</label>
                                    <input type="number"
                                           min="1"
                                           class="form-control"
                                           id="trackNumber"
                                           required
                                           asp-for="Episode.episode.TrackNumber"
                                           name="trackNumber" />
                                </div>

                                <div class="form-group">
                                    <label for="keywords">Keywords</label>
                                    <input type="text"
                                           class="form-control inputsm"
                                           id="keywords"
                                           asp-for="Episode.episode.Keywords"
                                           name="keywords" />
                                </div>
                                @*<div class="form-group">
                                        <label for="addToTweet">Add To Tweet</label>
                                        <input type="text"
                                               class="form-control"
                                               id="addToTweet"
                                               name="addToTweet"
                                               asp-for="Episode.TweetText" />
                                    </div>

                                    <div class="form-group">
                                        <label for="tweetPreview">Tweet Preview</label>
                                        <input type="text"
                                               class="form-control"
                                               id="tweetPreview" />
                                        {{ tweetLength }} / 280
                                    </div>*@

                                <partial name="_tagConsole" model=@Model.TCM />
                            </div>

                            <div class="col-1-of-2">
                                <div id="diveptime" class="form-group">
                                    <label for="epTime">Episode Length (HH:MM:SS): </label>
                                    <input type="text" id="epTime" name="epTime" asp-for="Episode.episode.Time" />
                                </div>
                                <div class="form-group" id="filesizeGroup">
                                    <label for="epSize">Episode Size in bytes: </label>
                                    <input type="text" id="epSize" name="epSize" asp-for="Episode.episode.Size" />
                                    <label id="fileSizeInMB">In MB: </label>
                                </div>

                                <label class="mt-2" for="imageURL">Image Location</label>
                                <input type="text"
                                       class="form-control"
                                       id="imgURLtextbox"
                                       required
                                       name="imgURLtextbox"
                                       asp-for="Episode.episode.EpImageURL"
                                       oninput="updateImg('imgURLtextbox', 'imgMainImage')" />

                                <input type="file"
                                       id="imgFileInput"
                                       name="imgFileInput"
                                       accept=".png,.jpg"
                                       #imgURLInput
                                       onchange="startImageSubmit(event, 'imgFileInput', 'imgURLtextbox', 'imgMainImage');" />
                                <br />

                                <img id="imgMainImage" src='@Model.EpSeries.ImageURL'
                                     class="editorImage" />

                                <hr />
                                <label for="splashImageURL">Splash Image Location</label>

                                <input type="text"
                                       class="form-control"
                                       id="splashImageInput"
                                       name="splashImageInput"
                                       asp-for="Episode.episode.SplashImageURL"
                                       oninput="updateImg('splashImageInput', 'imgSplashImage')" />
                                <input type="file"
                                       id="splashImgURLInput"
                                       accept=".png,.jpg"
                                       #splashImgURLInput
                                       onchange="startImageSubmit(event, 'splashImgURLInput', 'splashImageInput', 'imgSplashImage');" />
                                />
                                <img id="imgSplashImage" src='@Model.EpSeries.SplashImageURL' class="editorSplashImage" />
                            </div>
                        </div>
                        <div id="determiningEpLength">
                            <strong>
                                Currently Determining Episode Length. When this is done, you can
                                submit. This may take up to a minute for longer episodes.
                            </strong>
                        </div>
                        <button id="btnAddEpSubmit"
                                type="submit"
                                class="btn btn-success"
                                style="visibility:hidden">
                            Submit
                        </button>



                        @*<button id="Alternate Submit" type="button" onclick="SubmitEpisodeForm()">TEST SUBMIT</button>*@
                    </div>
                </div>
            </form>
        </div>

        <input type="hidden" id="epSeriesID" value="@Model.SeriesID" />

    }


}

@section Scripts
{

    <script type="text/javascript">

        $(document).ready(function () {

         CheckIfEditor("Auth Level: " & @Model.UserAuthLevel);


            let saved = document.getElementById("EpisodeSaved").value;




         if (saved == "True") {
             alert("Episode Saved");
             window.location.href = "/series/episode/" + @Model.SavedEpisodeID;
         }

        var myTinyMCE = new tinymce.Editor('tinyMCETextArea', {
            selector: 'tinyMCETextArea',
            width: 500, height: 500,
            menubar: false,
            toolbar: 'code undo redo | bold italic underline strikethrough |  image media  link   | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist | forecolor backcolor removeformat | pagebreak | charmap emoticons | fullscreen  preview save print  | ltr rtl',
            toolbar_sticky: true,
            plugins: 'image link media code'
        }, tinymce.EditorManager);
        myTinyMCE.render();

        filterTagList();
        populateSelectedTagList();


        //Update Images on Load Feature For Edit
        if (@Model.Episode.episode.EpisodeID != 0) {
            updateImg('splashImageInput', 'imgSplashImage');
            updateImg('imgURLtext', 'imgMainImage');
            document.getElementById('btnSubmit').innerHTML = "Update";
        }

    });

        function startImageSubmit(evt, senderObj, txtUpdateField, imgUpdateField) {
            let fd = new FormData();

            fd.append("File", document.getElementById(senderObj).files[0])
            var filename = document.getElementById(senderObj).files[0].name;


            submitImage(evt, fd, "episode", txtUpdateField, imgUpdateField, filename);


        }

        function changeAffiliate() {

            let chk = document.getElementById("affiliateChckbx");
            let chkSection = document.getElementById("affilliateSection");
            console.log(chk.checked);
            if (chk.checked == true) {

                chkSection.style.visibility = "visible";
                document.getElementById("filesizeGroup").style.visibility = "hidden";
                document.getElementById("btnAddEpSubmit").style.visibility = "visible";
                document.getElementById("determiningEpLength").style.visibility = "hidden";
                document.getElementById("diveptime").style.visibility = "hidden";
                
                

            }
            else {
                chkSection.style.visibility = "hidden";
                document.getElementById("filesizeGroup").style.visibility = "visible";
                document.getElementById("btnAddEpSubmit").style.visibility = "hidden";
                document.getElementById("determiningEpLength").style.visibility = "visible";
                document.getElementById("diveptime").style.visibility = "visible";
            }

        }

    function startFileProcess() {

        startAudioFileProcessing(document.getElementById("episodeUploadInput").files[0]);

        }



    </script>
}